call plug#begin('~/.vim/plugged')
Plug 'itchyny/lightline.vim'

Plug 'tpope/vim-fugitive'

Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'

Plug 'altercation/vim-colors-solarized'

Plug 'pangloss/vim-javascript'
Plug 'machakann/vim-highlightedyank'
call plug#end()

set nocompatible
set encoding=utf-8

" Bindings
let mapleader = "\<space>"

nmap j gj
nmap k gk

" Move visual selection
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Lightline
function! ShortGitBranchName()
  return strpart(fugitive#head(), 0, 30)
endfunction

set noshowmode
set laststatus=2
set cmdheight=1
let g:lightline = {
\ 'colorscheme': 'solarized',
\ 'active': {
\   'left': [ [ 'mode', 'paste' ],
\           [ 'readonly', 'filename', 'modified', 'gitbranch' ] ],
\   'right': [ [ 'lineinfo' ], [ 'linter_warnings', 'linter_errors', 'linter_ok' ] ],
\ },
\ 'component_function': {
\   'gitbranch': 'ShortGitBranchName',
\ },
\ 'component_expand': {
\   'linter_warnings': 'LightlineLinterWarnings',
\   'linter_errors': 'LightlineLinterErrors',
\   'linter_ok': 'LightlineLinterOK'
\ },
\ }

syntax enable

set background=dark
colorscheme solarized

if has('gui_running')
  set guifont=SF\ Mono:h14
else
  set guifont=SF\ Mono:h16
endif

" Whitespace
set autoindent
set smartindent
set backspace=indent,eol,start

set updatetime=250
set undofile
set clipboard=unnamed
set shortmess=I

" UI
set number
set relativenumber
set modelines=0
set scrolloff=5
set hidden
set ttyfast
set showcmd
set foldmethod=manual
set foldlevel=10
set mouse=a

set noswapfile
set nobackup
set nowb

set splitbelow
set splitright

set wrap linebreak

" Searching
set ignorecase
set smartcase
set gdefault
set nohlsearch
set incsearch
set showmatch
set inccommand=nosplit
